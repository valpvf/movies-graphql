{"version":3,"file":"static/js/486.f329e067.chunk.js","mappings":"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","sources":["features/About/CountdownVideo.tsx","features/About/CountdownText.tsx","features/About/MapView.tsx","features/About/mapWidget.ts","features/About/About.tsx"],"sourcesContent":["import { Card, CardActions, CardMedia, IconButton } from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport { useRef, useState } from \"react\";\n\nexport function CountdownVideo() {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  function togglePlaying() {\n    const nextPlaying = !isPlaying;\n\n    if (nextPlaying) {\n      videoRef.current?.play();\n    } else {\n      videoRef.current?.pause();\n    }\n  }\n\n  return (\n    <Card>\n      <CardMedia>\n        <video\n          ref={videoRef}\n          src=\"https://www.pexels.com/download/video/3843433\"\n          height=\"500\"\n          onPlay={() => setIsPlaying(true)}\n          onPause={() => setIsPlaying(false)} />\n      </CardMedia>\n      <CardActions>\n        <IconButton aria-label=\"play/pause\" onClick={togglePlaying}>\n          {isPlaying ? <PauseIcon sx={{ height: 38, width: 38 }} /> : <PlayArrowIcon sx={{ height: 38, width: 38 }} />}\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport function CountdownText() {\n  const intervalRef = useRef<any>(null);\n  const [countdown, setCountdown] = useState(9);\n\n  useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      setCountdown((value) => value - 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (countdown === 0) {\n      clearInterval(intervalRef.current);\n    }\n  }, [countdown]);\n\n  return (\n    <Typography variant=\"h4\" align=\"center\" sx={{ mb: 2 }}>\n      Coming soon: {countdown}.\n    </Typography>\n  );\n}\n","import { useRef, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Map } from \"leaflet\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { Box, Container, Typography } from \"@mui/material\";\nimport { createMapWidget, addPopupToMapWidget } from \"./mapWidget\";\n\nexport function MapView() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<Map | null>(null);\n  const [popupContainer, setPopupContainer] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current === null) {\n      const map = createMapWidget(containerRef.current!);\n      mapRef.current = map;\n      const popupDiv = addPopupToMapWidget(map);\n      setPopupContainer(popupDiv);\n    }\n  }, []);\n\n  return (\n    <Container ref={containerRef} sx={{ width: 800, height: 500, my: 2 }}>\n      {popupContainer !== null && createPortal(<Greeting />, popupContainer)}\n    </Container>\n  );\n}\n\nfunction Greeting() {\n  return (\n    <Box>\n      <Typography>Greetings from Ukraine!</Typography>\n      <FavoriteIcon sx={{ color: \"#0056B9\" }} />\n      <FavoriteIcon sx={{ color: \"#FFD800\" }} />\n    </Box>\n  );\n}\n","import \"leaflet/dist/leaflet.css\";\nimport * as L from \"leaflet\";\n\nexport function createMapWidget(containerDomNode: HTMLElement) {\n  const map = L.map(containerDomNode);\n  map.setView([49.575, 32.091], 6);\n  L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  }).addTo(map);\n\n  return map;\n}\n\nexport function addPopupToMapWidget(map: L.Map) {\n  const popupDiv = document.createElement(\"div\");\n  L.popup().setLatLng([50.4488, 30.5222]).setContent(popupDiv).openOn(map);\n  \n  return popupDiv;\n}\n","import { Container } from \"@mui/material\";\nimport { CountdownVideo } from \"./CountdownVideo\";\nimport { CountdownText } from \"./CountdownText\";\nimport { MapView } from \"./MapView\";\n\nfunction About() {\n  return (\n    <Container sx={{ py: 8 }} maxWidth=\"md\">\n      <CountdownText />\n      <CountdownVideo />\n      <MapView />\n    </Container>\n  );\n}\n\nexport default About;\n"],"names":["CountdownVideo","videoRef","useRef","isPlaying","setIsPlaying","useState","_jsxs","Card","children","_jsx","CardMedia","ref","src","height","onPlay","onPause","CardActions","IconButton","onClick","_videoRef$current","_videoRef$current2","current","pause","play","PauseIcon","sx","width","PlayArrowIcon","CountdownText","intervalRef","countdown","setCountdown","useEffect","setInterval","value","clearInterval","Typography","variant","align","mb","MapView","containerRef","mapRef","popupContainer","setPopupContainer","map","containerDomNode","L","setView","maxZoom","attribution","addTo","createMapWidget","popupDiv","document","createElement","setLatLng","setContent","openOn","addPopupToMapWidget","Container","my","createPortal","Greeting","Box","FavoriteIcon","color","py","maxWidth"],"sourceRoot":""}